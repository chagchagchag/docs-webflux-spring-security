(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{1464:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(9213)}])},9213:function(t,e,n){"use strict";n.r(e),n.d(e,{__toc:function(){return u}});var a=n(5893),i=n(2673),r=n(373),o=n(8426);n(9128);var c=n(2643);let u=[];function _createMdxContent(t){let e=Object.assign({h1:"h1",p:"p"},(0,c.a)(),t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"Introduction"}),"\n",(0,a.jsxs)(e.p,{children:["안녕하세요. 이 블로그는 Spring Webflux 기반의 Spring Security 관련된 예제와 개념, 문서를 정리하는 곳입니다. 간단한 JWT 인증을 ReactiveAuthenticationManager 를 이용해서 구현하는 것부터 시작해서 OAuth2 까지 정리해둘 예정입니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(e.p,{children:["이 외에도 Servlet 기반의 간단한 JWT 인증 예제 역시 정리해 둘 예정입니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)("br",{})]})}let s={MDXContent:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,c.a)(),t.components);return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(_createMdxContent,{...t})}):_createMdxContent(t)},pageOpts:{filePath:"pages/index.mdx",route:"/",timestamp:1709533376e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"jwt-authentication-manager-way",route:"/jwt-authentication-manager-way",children:[{kind:"MdxPage",name:"jwt-authentication-example",route:"/jwt-authentication-manager-way/jwt-authentication-example"},{kind:"MdxPage",name:"security-auth-communication",route:"/jwt-authentication-manager-way/security-auth-communication"},{kind:"Meta",data:{"jwt-authentication-example":"JWT 인증 예제","security-auth-communication":"시큐리티 인증 클래스들의 상호작용"}}]},{kind:"Folder",name:"jwt-basic",route:"/jwt-basic",children:[{kind:"MdxPage",name:"jwt-generate-degenerate-example",route:"/jwt-basic/jwt-generate-degenerate-example"},{kind:"MdxPage",name:"what-is-jwt",route:"/jwt-basic/what-is-jwt"},{kind:"Meta",data:{"what-is-jwt":"JWT 란?","jwt-generate-degenerate-example":"JWT 생성, 분해 예제"}}]},{kind:"Folder",name:"oauth2",route:"/oauth2",children:[{kind:"MdxPage",name:"Intro",route:"/oauth2/Intro"},{kind:"Meta",data:{intro:"Intro",Intro:"Intro"}}]},{kind:"Folder",name:"servlet-security-auth",route:"/servlet-security-auth",children:[{kind:"MdxPage",name:"intro",route:"/servlet-security-auth/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Meta",data:{index:"Introduction","jwt-basic":"JWT 개념","jwt-authentication-manager-way":"AuthenticationManager 방식의 JWT  인증",oauth2:"OAuth2","servlet-security-auth":"servlet 기반의 시큐리티 JWT 인증",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Introduction",headings:u},pageNextRoute:"/",nextraLayout:r.ZP,themeConfig:o.Z};e.default=(0,i.j)(s)},8426:function(t,e,n){"use strict";var a=n(5893);n(7294);let i={logo:(0,a.jsx)("span",{children:"Docs Webflux Spring Security"}),project:{link:"https://github.com/chagchagchag/docs-webflux-spring-security"},docsRepositoryBase:"https://github.com/chagchagchag/docs-webflux-spring-security",footer:{text:"Nextra Docs Template"}};e.Z=i},5789:function(){}},function(t){t.O(0,[774,796,888,179],function(){return t(t.s=1464)}),_N_E=t.O()}]);