(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[338],{9738:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/oauth2/what-is-oauth",function(){return t(5541)}])},5541:function(e,n,t){"use strict";t.r(n),t.d(n,{__toc:function(){return l}});var i=t(5893),r=t(2673),a=t(373),s=t(8426);t(9128);var o=t(2643);let l=[{depth:2,value:"OAuth 핵심 개념",id:"oauth-핵심-개념"},{depth:2,value:"OAuth 의 핵심 주체",id:"oauth-의-핵심-주체"},{depth:3,value:"Resource Owner (리소스 오너)",id:"resource-owner-리소스-오너"},{depth:3,value:"Resource Server (리소스 서버)",id:"resource-server-리소스-서버"},{depth:3,value:"Authorization Server (인증 서버)",id:"authorization-server-인증-서버"},{depth:3,value:"Client Application (클라이언트 애플리케이션)",id:"client-application-클라이언트-애플리케이션"},{depth:2,value:"Authorization 방식",id:"authorization-방식"},{depth:3,value:"Authorization Code Grant Type (권한 부여 코드 승인 타입)",id:"authorization-code-grant-type-권한-부여-코드-승인-타입"},{depth:3,value:"Implicit Grant Type (암시적 승인 타입)",id:"implicit-grant-type-암시적-승인-타입"},{depth:3,value:"Resource Owner Password Credentials (리소스 소유자 암호 자격증명 승인 타입)",id:"resource-owner-password-credentials-리소스-소유자-암호-자격증명-승인-타입"},{depth:3,value:"Client Credentials Grant (클라이언트 자격 증명 승인 타입)",id:"client-credentials-grant-클라이언트-자격-증명-승인-타입"},{depth:2,value:"이번 문서에서는",id:"이번-문서에서는"},{depth:2,value:"권한 요청 파라미터",id:"권한-요청-파라미터"},{depth:3,value:"권한 요청",id:"권한-요청"},{depth:3,value:"파라미터",id:"파라미터"},{depth:2,value:"Resource Owner 의 데이터 접근 동의",id:"resource-owner-의-데이터-접근-동의"},{depth:2,value:"Authorization Code 리다이렉션",id:"authorization-code-리다이렉션"},{depth:2,value:"액세스 토큰 응답이란?",id:"액세스-토큰-응답이란"}];function _createMdxContent(e){let n=Object.assign({h2:"h2",p:"p",blockquote:"blockquote",h3:"h3",ul:"ul",li:"li",img:"img",a:"a",code:"code",pre:"pre",span:"span"},(0,o.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"oauth-핵심-개념",children:"OAuth 핵심 개념"}),"\n",(0,i.jsxs)(n.p,{children:["OAuth 는 제 3의 서비스에 계정관리를 맡기는 방식을 의미합니다. 예를 들면 구글 로그인 기능으로 로그인을 하는 방식을 의미합니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Authorization, Authentication 이라는 용어 자체를 한국 단어로 인증, 인가 로 표현하는데, 실제 정해진 단어가 있는지는 확실치가 않고, 단어가 오용될 수도 있는 소지가 있기에 영어단어를 그대로 사용하겠습니다. ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.p,{children:"Authorization, Authentication 이 혼용될때에만 영어단어로 표기하겠습니다. 일반적인 'OAuth 인증' 등과 같은 단어는 그대로 사용합니다."}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h2,{id:"oauth-의-핵심-주체",children:"OAuth 의 핵심 주체"}),"\n",(0,i.jsxs)(n.p,{children:["OAuth 에서 주요하게 행동을 하는 4 종류의 주체들이 있습니다. 이 요소들을 정리해보면 아래와 같습니다. 한글로 번역된 용어보다 영어 용어를 보는 것이 기억이 잘 되기아 가급적 영어 용어로 기억하길 추천드립니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"resource-owner-리소스-오너",children:"Resource Owner (리소스 오너)"}),"\n",(0,i.jsxs)(n.p,{children:["서비스에 자신을 등록한 사용자를 의미합니다. 자기 자신의 정보를 인증 서버에서 사용할 수 있도록 동의를 해서 서비스에 자기자신의 정보의 사용을 허가한 주체입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"resource-server-리소스-서버",children:"Resource Server (리소스 서버)"}),"\n",(0,i.jsxs)(n.p,{children:["Resource Owner 의 정보를 가지고 있고, 이 정보를 보호하고 있는 주체입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"authorization-server-인증-서버",children:"Authorization Server (인증 서버)"}),"\n",(0,i.jsxs)(n.p,{children:["클라이언트에게 토큰을 발급하는 주체입니다. 토큰을 사용하면 클라이언트가 Resource Owner 의 정보에 접근이 가능합니다. 일반적으로 go, java, python 등의 언어로 구글 Open API 프로그램을 작성할 때 이 프로그램이 클라이언트 역할을 합니다. Authorization Server 는 구글을 예로 들면, 구글의 인증만을 수행하는 서버를 의미합니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"client-application-클라이언트-애플리케이션",children:"Client Application (클라이언트 애플리케이션)"}),"\n",(0,i.jsxs)(n.p,{children:["우리가 만들게 될 go, java, python 등의 언어로 작성한 구글 Open API 프로그램이 Client Application 에 해당합니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h2,{id:"authorization-방식",children:"Authorization 방식"}),"\n",(0,i.jsxs)(n.p,{children:["Client Application 은 Resource Owner 가 Ahtorization Server 에서 Authorization 을 거치면 토큰을 획득하게 되는데, 이렇게 해서 Resource Owner 의 정보를 획득 가능합니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.p,{children:"Resource Owner 의 정보를 취득하는 방식은 4 종류가 있습니다."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Authorization Code Grant Type (권한 부여 코드 승인 타입)"}),"\n",(0,i.jsx)(n.li,{children:"Implicit Grant Type (암시적 승인 타입)"}),"\n",(0,i.jsx)(n.li,{children:"Resource Owner Password Credentials (리소스 소유자 암호 자격 증명 승인 타입)"}),"\n",(0,i.jsx)(n.li,{children:"Client Credentials Grant (클라이언트 자격 증명 승인 타입)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"authorization-code-grant-type-권한-부여-코드-승인-타입",children:"Authorization Code Grant Type (권한 부여 코드 승인 타입)"}),"\n",(0,i.jsxs)(n.p,{children:["OAuth2.0 사용 시 가장 대중화된 인증 방식입니다. 클라이언트가 Resource Owner 에 대한 액세스 토큰, 접근 권한 코드를 발급받는 방식입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["접근 권한 코드라는 것은 Resource Owner 가 가진 권한을 부여받은 코드입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.p,{children:"Authorization Code Grant Type 방식의 Authorization 과정은 아래와 같습니다."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://docs.vmware.com/en/Single-Sign-On-for-VMware-Tanzu-Application-Service/1.14/sso/Images/images-oauth_auth_code.png",alt:""})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["참고 : ",(0,i.jsx)(n.a,{href:"https://docs.vmware.com/en/Single-Sign-On-for-VMware-Tanzu-Application-Service/1.14/sso/GUID-grant-types.html",children:"docs.vmware.com - SSO/GUID Grant Types"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["구글 이미지 검색으로 ",(0,i.jsx)(n.code,{children:"authorization code grant type"})," 을 검색"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h3,{id:"implicit-grant-type-암시적-승인-타입",children:"Implicit Grant Type (암시적 승인 타입)"}),"\n",(0,i.jsxs)(n.p,{children:["서버 없이 동작해야 하는 Javascript 애플리케이션에서 사용할 수 있는 방식입니다. 다른 정보 없이 액세스 토큰만을 부여받는 방식입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["클라이언트(Javascript)가 요청을 보냈을 때 리소스의 Authorization 과정만을 거친 후 액세스 토큰을 제공받습니다. 이때 별도의 접근 권한 코드 등을 획득하는 부가적인 과정을 거치지 않습니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(n.p,{children:["접근 권한 코드 등과 같은 별도의 정보가 없기에 '모호하다'는 의미인 Implicit 이라는 단어가 사용되었음에 주목해주세요.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h3,{id:"resource-owner-password-credentials-리소스-소유자-암호-자격증명-승인-타입",children:"Resource Owner Password Credentials (리소스 소유자 암호 자격증명 승인 타입)"}),"\n",(0,i.jsxs)(n.p,{children:["클라이언트의 패스워드를 이용해서 액세스 토큰에 대한 사용자의 자격 증명을교환하는 방식입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"client-credentials-grant-클라이언트-자격-증명-승인-타입",children:"Client Credentials Grant (클라이언트 자격 증명 승인 타입)"}),"\n",(0,i.jsxs)(n.p,{children:["클라이언트가 컨텍스트 외부에서 얻은 액세스 토큰을 통해 리소스에 접근하는 방식입니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h2,{id:"이번-문서에서는",children:"이번 문서에서는"}),"\n",(0,i.jsxs)(n.p,{children:["이번문서에서는 Authorization Code Grant (인증 코드 부여) 방식의 인증방식만을 정리합니다.",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h2,{id:"권한-요청-파라미터",children:"권한 요청 파라미터"}),"\n",(0,i.jsx)(n.h3,{id:"권한-요청",children:"권한 요청"}),"\n",(0,i.jsx)(n.p,{children:"go, java, python 등의 언어로 작성한 구글 Open API 프로그램이 Client Application 이 특정 사용자 데이터에 접근하기 위해 Authorization Server 에 요청을 보내는 것을 권한 요청이라고 합니다."}),"\n",(0,i.jsx)(n.h3,{id:"파라미터",children:"파라미터"}),"\n",(0,i.jsx)(n.p,{children:"예를 들면 아래와 같은 형식의 파라미터를 사용해서 권한 요청을 수행하는 것이 가능합니다."}),"\n",(0,i.jsx)(n.pre,{"data-language":"plain","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"plain","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"GET some-example.com/auth? \\"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	client_id=1111& \\"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	redirect_uri=http://localhost:7777/myapp& \\"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	response_type=code& \\"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	scope=profile"})})]})}),"\n",(0,i.jsx)(n.p,{children:"client_id"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"인증서버에서 Client Application 에 부여한 id 입니다."}),"\n",(0,i.jsx)(n.li,{children:"이 값은 Client Application 을 구글과 같은 OAuth 서비스에 등록할 때 서비스 내에서 생성한 값 입니다."}),"\n",(0,i.jsx)(n.li,{children:"관리 콘솔 등에서 확인 가능합니다"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"redirect_uri"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"로그인 성공시 이동할 uri 를 의미합니다."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"response_type"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client Application 이 제공받으려 하는 응답 타입입니다."}),"\n",(0,i.jsxs)(n.li,{children:["접근 권한 코드를 받으려 할 경우에는 반드시 ",(0,i.jsx)(n.code,{children:"code"})," 파라미터를 포함해야 합니다."]}),"\n",(0,i.jsxs)(n.li,{children:["Authorization Code Grant 방식의 인증에서는 접근권한 코드가 필요하기에 ",(0,i.jsx)(n.code,{children:"code"})," 파라미터는 반드시 필요합니다."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"scope"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"제공받고자 하는 Resource Owner 의 정보 목록을 의미합니다."}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h2,{id:"resource-owner-의-데이터-접근-동의",children:"Resource Owner 의 데이터 접근 동의"}),"\n",(0,i.jsx)(n.p,{children:"Authorization Server 에 처음 요청을 보낼 경우 사용자에게 보이는 페이지를 로그인 페이지로 변경 후 사용자의 데이터에 대한 접근 동의를 얻는 과정을 거치는데 이 과정은 최초 1회 수행합니다. Authorization Server 는 이 때 동의 내용을 저장하게 되며, 이후의 과정부터는 Authorization Server 에서 동의서를 저장하고 있기에 로그인 절차만을 수행합니다."}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h2,{id:"authorization-code-리다이렉션",children:"Authorization Code 리다이렉션"}),"\n",(0,i.jsxs)(n.p,{children:["Resource Owner 인 사용자가 로그인에 성공하면 권한 요청 시에 파라미터로 지정한 ",(0,i.jsx)(n.code,{children:"redirect_uri"})," 로 리다이렉션 됩니다. 이때 리다이렉션 되는 uri 의 파라미터에는 인증코드가 함께 제공됩니다. 예를 들면 아래와 같은 uri 로 리다이렉트 되게 됩니다."]}),"\n",(0,i.jsx)(n.pre,{"data-language":"plain","data-theme":"default",children:(0,i.jsx)(n.code,{"data-language":"plain","data-theme":"default",children:(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"GET http://localhost:7777/my-travel-app?code=33557799aa"})})})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.h2,{id:"액세스-토큰-응답이란",children:"액세스 토큰 응답이란?"}),"\n",(0,i.jsx)(n.p,{children:"Authorization Code 를 받은 후에는 이것을 비대칭 키 기반으로 암호화된 Access Token 으로 교환받아야 합니다."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://docs.vmware.com/en/Single-Sign-On-for-VMware-Tanzu-Application-Service/1.14/sso/Images/images-oauth_auth_code.png",alt:""})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["참고 : ",(0,i.jsx)(n.a,{href:"https://docs.vmware.com/en/Single-Sign-On-for-VMware-Tanzu-Application-Service/1.14/sso/GUID-grant-types.html",children:"docs.vmware.com - SSO/GUID Grant Types"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["구글 이미지 검색으로 ",(0,i.jsx)(n.code,{children:"authorization code grant type"})," 을 검색"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"예를 들면 아래와 같은 HTTP Post 요청으로 수행하게 됩니다."}),"\n",(0,i.jsx)(n.pre,{"data-language":"plain","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"plain","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"POST some-example.com/token"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'  "client_id": "1111",'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'  "client_secret": "aa112233",'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'  "redirect_uri": "http://localhost:7777/gogogo",'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'  "grant_type": "authorization_token",'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'  "code": "33557799aa"'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"client_secret : 구글 콘솔에서 확인 가능한 Client Application 에 대한 Secret 키 입니다."}),"\n",(0,i.jsxs)(n.li,{children:["grant_type : ",(0,i.jsx)(n.code,{children:"authorization_token"})," 으로 지정해줬습니다."]}),"\n"]})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.a)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/oauth2/what-is-oauth.mdx",route:"/oauth2/what-is-oauth",timestamp:1717365818e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"jwt-authentication-manager-way",route:"/jwt-authentication-manager-way",children:[{kind:"MdxPage",name:"example-using-reactive-authentication-manager",route:"/jwt-authentication-manager-way/example-using-reactive-authentication-manager"},{kind:"MdxPage",name:"security-auth-interaction",route:"/jwt-authentication-manager-way/security-auth-interaction"},{kind:"Meta",data:{"example-using-reactive-authentication-manager":"ReactiveAuthenticationManager 기반의 인증","security-auth-interaction":"시큐리티 인증 클래스들의 상호작용"}}]},{kind:"Folder",name:"jwt-basic",route:"/jwt-basic",children:[{kind:"MdxPage",name:"jwt-generate-degenerate-example",route:"/jwt-basic/jwt-generate-degenerate-example"},{kind:"MdxPage",name:"what-is-jwt",route:"/jwt-basic/what-is-jwt"},{kind:"Meta",data:{"what-is-jwt":"JWT 란?","jwt-generate-degenerate-example":"JWT 생성, 분해 예제"}}]},{kind:"Folder",name:"oauth2",route:"/oauth2",children:[{kind:"MdxPage",name:"google-cloud-platform",route:"/oauth2/google-cloud-platform"},{kind:"MdxPage",name:"what-is-oauth",route:"/oauth2/what-is-oauth"},{kind:"Meta",data:{"what-is-oauth":"OAuth 란?","google-cloud-platform":"Google Cloud Plaform API 토큰 발급"}}]},{kind:"Folder",name:"servlet-security-auth",route:"/servlet-security-auth",children:[{kind:"MdxPage",name:"intro",route:"/servlet-security-auth/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Meta",data:{index:"Introduction","jwt-basic":"JWT 개념","jwt-authentication-manager-way":"AuthenticationManager 방식의 JWT  인증",oauth2:"OAuth2","servlet-security-auth":"servlet 기반의 시큐리티 JWT 인증",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"What Is Oauth",headings:l},pageNextRoute:"/oauth2/what-is-oauth",nextraLayout:a.ZP,themeConfig:s.Z};n.default=(0,r.j)(c)},8426:function(e,n,t){"use strict";var i=t(5893);t(7294);let r={logo:(0,i.jsx)("span",{children:"Docs Webflux Spring Security"}),project:{link:"https://github.com/chagchagchag/docs-webflux-spring-security"},docsRepositoryBase:"https://github.com/chagchagchag/docs-webflux-spring-security",footer:{text:"Nextra Docs Template"}};n.Z=r},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=9738)}),_N_E=e.O()}]);