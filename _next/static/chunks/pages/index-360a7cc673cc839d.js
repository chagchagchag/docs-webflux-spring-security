(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{1464:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return a(9213)}])},9213:function(e,t,a){"use strict";a.r(t),a.d(t,{__toc:function(){return u}});var n=a(5893),i=a(2673),r=a(373),o=a(8426);a(9128);var c=a(2643);let u=[];function _createMdxContent(e){let t=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",a:"a"},(0,c.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{children:"Introduction"}),"\n",(0,n.jsxs)(t.p,{children:["안녕하세요. 이 블로그는 Spring Webflux 기반의 Spring Security 관련된 예제와 개념, 문서를 정리하는 곳입니다. 간단한 JWT 인증을 ReactiveAuthenticationManager 를 이용해서 구현하는 것부터 시작해서 OAuth2 까지 정리해둘 예정입니다.",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.p,{children:["이 외에도 Servlet 기반의 간단한 JWT 인증 예제 역시 정리해 둘 예정입니다.",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/chagchagchag/webflux-mongo-mysql-redis/tree/main/foobar-user",children:"https://github.com/chagchagchag/webflux-mongo-mysql-redis/tree/main/foobar-user"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/chagchagchag/example-oauth2-client",children:"https://github.com/chagchagchag/example-oauth2-client"})}),"\n"]})]})}let h={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,c.a)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/index.mdx",route:"/",timestamp:171736612e4,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"jwt-authentication-manager-way",route:"/jwt-authentication-manager-way",children:[{kind:"MdxPage",name:"example-using-reactive-authentication-manager",route:"/jwt-authentication-manager-way/example-using-reactive-authentication-manager"},{kind:"MdxPage",name:"security-auth-interaction",route:"/jwt-authentication-manager-way/security-auth-interaction"},{kind:"Meta",data:{"example-using-reactive-authentication-manager":"ReactiveAuthenticationManager 기반의 인증","security-auth-interaction":"시큐리티 인증 클래스들의 상호작용"}}]},{kind:"Folder",name:"jwt-basic",route:"/jwt-basic",children:[{kind:"MdxPage",name:"jwt-generate-degenerate-example",route:"/jwt-basic/jwt-generate-degenerate-example"},{kind:"MdxPage",name:"what-is-jwt",route:"/jwt-basic/what-is-jwt"},{kind:"Meta",data:{"what-is-jwt":"JWT 란?","jwt-generate-degenerate-example":"JWT 생성, 분해 예제"}}]},{kind:"Folder",name:"oauth2",route:"/oauth2",children:[{kind:"MdxPage",name:"google-cloud-platform",route:"/oauth2/google-cloud-platform"},{kind:"MdxPage",name:"what-is-oauth",route:"/oauth2/what-is-oauth"},{kind:"Meta",data:{"what-is-oauth":"OAuth 란?","google-cloud-platform":"Google Cloud Plaform API 토큰 발급"}}]},{kind:"Folder",name:"servlet-security-auth",route:"/servlet-security-auth",children:[{kind:"MdxPage",name:"intro",route:"/servlet-security-auth/intro"},{kind:"Meta",data:{intro:"Intro"}}]},{kind:"Meta",data:{index:"Introduction","jwt-basic":"JWT 개념","jwt-authentication-manager-way":"AuthenticationManager 방식의 JWT  인증",oauth2:"OAuth2","servlet-security-auth":"servlet 기반의 시큐리티 JWT 인증",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Introduction",headings:u},pageNextRoute:"/",nextraLayout:r.ZP,themeConfig:o.Z};t.default=(0,i.j)(h)},8426:function(e,t,a){"use strict";var n=a(5893);a(7294);let i={logo:(0,n.jsx)("span",{children:"Docs Webflux Spring Security"}),project:{link:"https://github.com/chagchagchag/docs-webflux-spring-security"},docsRepositoryBase:"https://github.com/chagchagchag/docs-webflux-spring-security",footer:{text:"Nextra Docs Template"}};t.Z=i},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=1464)}),_N_E=e.O()}]);